
package lifetime.roles;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "RoleManagementServiceSoap", targetNamespace = "http://LifeTimeServices/RoleManagementService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface RoleManagementServiceSoap {


    /**
     * Updates the permissions a platform role has in a specified environment.
     * 
     * @param status
     * @param authentication
     * @param roleName
     * @param environmentKey
     * @param success
     * @param newPermissionLevelId
     */
    @WebMethod(operationName = "Role_UpdatePermission", action = "http://LifeTimeServices/RoleManagementService/Role_UpdatePermission")
    @RequestWrapper(localName = "Role_UpdatePermission", targetNamespace = "http://www.outsystems.com", className = "lifetime.roles.RoleUpdatePermission")
    @ResponseWrapper(localName = "Role_UpdatePermissionResponse", targetNamespace = "http://www.outsystems.com", className = "lifetime.roles.RoleUpdatePermissionResponse")
    public void roleUpdatePermission(
        @WebParam(name = "Authentication", targetNamespace = "http://www.outsystems.com")
        WebServiceSimpleAuthentication authentication,
        @WebParam(name = "RoleName", targetNamespace = "http://www.outsystems.com")
        String roleName,
        @WebParam(name = "EnvironmentKey", targetNamespace = "http://www.outsystems.com")
        String environmentKey,
        @WebParam(name = "NewPermissionLevelId", targetNamespace = "http://www.outsystems.com")
        int newPermissionLevelId,
        @WebParam(name = "Status", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<APIStatus> status,
        @WebParam(name = "Success", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<Boolean> success);

    /**
     * Deletes a platform role that already exists. Since the platform requires IT users to have a single platform role, you need to specify a new platform role to grant to the users that are currently set with the role you want to delete.
     * 
     * 
     * @param status
     * @param authentication
     * @param affectedPlatformUsers
     * @param roleName
     * @param usersNewRoleName
     * @param success
     */
    @WebMethod(operationName = "Role_Delete", action = "http://LifeTimeServices/RoleManagementService/Role_Delete")
    @RequestWrapper(localName = "Role_Delete", targetNamespace = "http://www.outsystems.com", className = "lifetime.roles.RoleDelete")
    @ResponseWrapper(localName = "Role_DeleteResponse", targetNamespace = "http://www.outsystems.com", className = "lifetime.roles.RoleDeleteResponse")
    public void roleDelete(
        @WebParam(name = "Authentication", targetNamespace = "http://www.outsystems.com")
        WebServiceSimpleAuthentication authentication,
        @WebParam(name = "RoleName", targetNamespace = "http://www.outsystems.com")
        String roleName,
        @WebParam(name = "UsersNewRoleName", targetNamespace = "http://www.outsystems.com")
        String usersNewRoleName,
        @WebParam(name = "AffectedPlatformUsers", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<ArrayOfPlatformUser> affectedPlatformUsers,
        @WebParam(name = "Status", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<APIStatus> status,
        @WebParam(name = "Success", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<Boolean> success);

    /**
     * Updates the name of a platform role.
     * 
     * @param oldRoleName
     * @param status
     * @param authentication
     * @param newRoleName
     * @param success
     */
    @WebMethod(operationName = "Role_ChangeName", action = "http://LifeTimeServices/RoleManagementService/Role_ChangeName")
    @RequestWrapper(localName = "Role_ChangeName", targetNamespace = "http://www.outsystems.com", className = "lifetime.roles.RoleChangeName")
    @ResponseWrapper(localName = "Role_ChangeNameResponse", targetNamespace = "http://www.outsystems.com", className = "lifetime.roles.RoleChangeNameResponse")
    public void roleChangeName(
        @WebParam(name = "Authentication", targetNamespace = "http://www.outsystems.com")
        WebServiceSimpleAuthentication authentication,
        @WebParam(name = "OldRoleName", targetNamespace = "http://www.outsystems.com")
        String oldRoleName,
        @WebParam(name = "NewRoleName", targetNamespace = "http://www.outsystems.com")
        String newRoleName,
        @WebParam(name = "Status", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<APIStatus> status,
        @WebParam(name = "Success", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<Boolean> success);

    /**
     * Creates a new platform role or updates a platform role that already exists.
     * 
     * @param roleDescription
     * @param status
     * @param authentication
     * @param canConfigureInfrastructure
     * @param platformRole
     * @param roleName
     * @param success
     */
    @WebMethod(operationName = "Role_CreateOrUpdate", action = "http://LifeTimeServices/RoleManagementService/Role_CreateOrUpdate")
    @RequestWrapper(localName = "Role_CreateOrUpdate", targetNamespace = "http://www.outsystems.com", className = "lifetime.roles.RoleCreateOrUpdate")
    @ResponseWrapper(localName = "Role_CreateOrUpdateResponse", targetNamespace = "http://www.outsystems.com", className = "lifetime.roles.RoleCreateOrUpdateResponse")
    public void roleCreateOrUpdate(
        @WebParam(name = "Authentication", targetNamespace = "http://www.outsystems.com")
        WebServiceSimpleAuthentication authentication,
        @WebParam(name = "RoleName", targetNamespace = "http://www.outsystems.com")
        String roleName,
        @WebParam(name = "CanConfigureInfrastructure", targetNamespace = "http://www.outsystems.com")
        boolean canConfigureInfrastructure,
        @WebParam(name = "RoleDescription", targetNamespace = "http://www.outsystems.com")
        String roleDescription,
        @WebParam(name = "PlatformRole", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<PlatformRole> platformRole,
        @WebParam(name = "Status", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<APIStatus> status,
        @WebParam(name = "Success", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<Boolean> success);

    /**
     * Returns all platform roles with their information.
     * 
     * @param platformRoles
     * @param status
     * @param authentication
     * @param success
     */
    @WebMethod(operationName = "Role_List", action = "http://LifeTimeServices/RoleManagementService/Role_List")
    @RequestWrapper(localName = "Role_List", targetNamespace = "http://www.outsystems.com", className = "lifetime.roles.RoleList")
    @ResponseWrapper(localName = "Role_ListResponse", targetNamespace = "http://www.outsystems.com", className = "lifetime.roles.RoleListResponse")
    public void roleList(
        @WebParam(name = "Authentication", targetNamespace = "http://www.outsystems.com")
        WebServiceSimpleAuthentication authentication,
        @WebParam(name = "PlatformRoles", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<ArrayOfPlatformRole> platformRoles,
        @WebParam(name = "Status", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<APIStatus> status,
        @WebParam(name = "Success", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<Boolean> success);

    /**
     * Returns the list of permissions a platform role has in the environments registered in the platform.
     * 
     * @param status
     * @param authentication
     * @param platformRolePermissions
     * @param roleName
     * @param success
     */
    @WebMethod(operationName = "Role_GetPermissions", action = "http://LifeTimeServices/RoleManagementService/Role_GetPermissions")
    @RequestWrapper(localName = "Role_GetPermissions", targetNamespace = "http://www.outsystems.com", className = "lifetime.roles.RoleGetPermissions")
    @ResponseWrapper(localName = "Role_GetPermissionsResponse", targetNamespace = "http://www.outsystems.com", className = "lifetime.roles.RoleGetPermissionsResponse")
    public void roleGetPermissions(
        @WebParam(name = "Authentication", targetNamespace = "http://www.outsystems.com")
        WebServiceSimpleAuthentication authentication,
        @WebParam(name = "RoleName", targetNamespace = "http://www.outsystems.com")
        String roleName,
        @WebParam(name = "PlatformRolePermissions", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<ArrayOfEnvironmentPermissionForRole> platformRolePermissions,
        @WebParam(name = "Status", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<APIStatus> status,
        @WebParam(name = "Success", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<Boolean> success);

}
