
package lifetime.teams;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "TeamManagementServiceSoap", targetNamespace = "http://LifeTimeServices/TeamManagementService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TeamManagementServiceSoap {


    /**
     * Creates a new team or updates an already existent team.
     * 
     * @param teamName
     * @param status
     * @param platformTeam
     * @param description
     * @param authentication
     * @param success
     */
    @WebMethod(operationName = "Team_CreateOrUpdate", action = "http://LifeTimeServices/TeamManagementService/Team_CreateOrUpdate")
    @RequestWrapper(localName = "Team_CreateOrUpdate", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamCreateOrUpdate")
    @ResponseWrapper(localName = "Team_CreateOrUpdateResponse", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamCreateOrUpdateResponse")
    public void teamCreateOrUpdate(
        @WebParam(name = "Authentication", targetNamespace = "http://www.outsystems.com")
        WebServiceSimpleAuthentication authentication,
        @WebParam(name = "TeamName", targetNamespace = "http://www.outsystems.com")
        String teamName,
        @WebParam(name = "Description", targetNamespace = "http://www.outsystems.com")
        String description,
        @WebParam(name = "Success", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<Boolean> success,
        @WebParam(name = "Status", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<APIStatus> status,
        @WebParam(name = "PlatformTeam", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<PlatformTeam> platformTeam);

    /**
     * Deletes a team.
     * 
     * @param teamName
     * @param status
     * @param authentication
     * @param success
     */
    @WebMethod(operationName = "Team_Delete", action = "http://LifeTimeServices/TeamManagementService/Team_Delete")
    @RequestWrapper(localName = "Team_Delete", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamDelete")
    @ResponseWrapper(localName = "Team_DeleteResponse", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamDeleteResponse")
    public void teamDelete(
        @WebParam(name = "Authentication", targetNamespace = "http://www.outsystems.com")
        WebServiceSimpleAuthentication authentication,
        @WebParam(name = "TeamName", targetNamespace = "http://www.outsystems.com")
        String teamName,
        @WebParam(name = "Success", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<Boolean> success,
        @WebParam(name = "Status", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<APIStatus> status);

    /**
     * Returns the details of a team, with its users and applications.
     * 
     * @param teamName
     * @param status
     * @param platformTeam
     * @param authentication
     * @param success
     */
    @WebMethod(operationName = "Team_GetDetails", action = "http://LifeTimeServices/TeamManagementService/Team_GetDetails")
    @RequestWrapper(localName = "Team_GetDetails", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamGetDetails")
    @ResponseWrapper(localName = "Team_GetDetailsResponse", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamGetDetailsResponse")
    public void teamGetDetails(
        @WebParam(name = "Authentication", targetNamespace = "http://www.outsystems.com")
        WebServiceSimpleAuthentication authentication,
        @WebParam(name = "TeamName", targetNamespace = "http://www.outsystems.com")
        String teamName,
        @WebParam(name = "Success", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<Boolean> success,
        @WebParam(name = "Status", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<APIStatus> status,
        @WebParam(name = "PlatformTeam", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<PlatformTeam> platformTeam);

    /**
     * Removes an application from a team.
     * 
     * @param teamName
     * @param status
     * @param authentication
     * @param applicationKey
     * @param success
     */
    @WebMethod(operationName = "Team_RemoveApplication", action = "http://LifeTimeServices/TeamManagementService/Team_RemoveApplication")
    @RequestWrapper(localName = "Team_RemoveApplication", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamRemoveApplication")
    @ResponseWrapper(localName = "Team_RemoveApplicationResponse", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamRemoveApplicationResponse")
    public void teamRemoveApplication(
        @WebParam(name = "Authentication", targetNamespace = "http://www.outsystems.com")
        WebServiceSimpleAuthentication authentication,
        @WebParam(name = "TeamName", targetNamespace = "http://www.outsystems.com")
        String teamName,
        @WebParam(name = "ApplicationKey", targetNamespace = "http://www.outsystems.com")
        String applicationKey,
        @WebParam(name = "Success", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<Boolean> success,
        @WebParam(name = "Status", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<APIStatus> status);

    /**
     * Returns a list of the teams.
     * 
     * @param platformTeams
     * @param status
     * @param authentication
     * @param success
     */
    @WebMethod(operationName = "Team_List", action = "http://LifeTimeServices/TeamManagementService/Team_List")
    @RequestWrapper(localName = "Team_List", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamList")
    @ResponseWrapper(localName = "Team_ListResponse", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamListResponse")
    public void teamList(
        @WebParam(name = "Authentication", targetNamespace = "http://www.outsystems.com")
        WebServiceSimpleAuthentication authentication,
        @WebParam(name = "Success", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<Boolean> success,
        @WebParam(name = "Status", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<APIStatus> status,
        @WebParam(name = "PlatformTeams", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<ArrayOfPlatformTeam> platformTeams);

    /**
     * Assigns an application to a team, even if the application is already assigned to a team.
     * 
     * @param teamName
     * @param status
     * @param authentication
     * @param applicationKey
     * @param success
     */
    @WebMethod(operationName = "Team_AssignApplication", action = "http://LifeTimeServices/TeamManagementService/Team_AssignApplication")
    @RequestWrapper(localName = "Team_AssignApplication", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamAssignApplication")
    @ResponseWrapper(localName = "Team_AssignApplicationResponse", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamAssignApplicationResponse")
    public void teamAssignApplication(
        @WebParam(name = "Authentication", targetNamespace = "http://www.outsystems.com")
        WebServiceSimpleAuthentication authentication,
        @WebParam(name = "TeamName", targetNamespace = "http://www.outsystems.com")
        String teamName,
        @WebParam(name = "ApplicationKey", targetNamespace = "http://www.outsystems.com")
        String applicationKey,
        @WebParam(name = "Success", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<Boolean> success,
        @WebParam(name = "Status", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<APIStatus> status);

    /**
     * Removes a user from a team.
     * 
     * @param teamName
     * @param username
     * @param status
     * @param authentication
     * @param success
     */
    @WebMethod(operationName = "Team_RemoveUser", action = "http://LifeTimeServices/TeamManagementService/Team_RemoveUser")
    @RequestWrapper(localName = "Team_RemoveUser", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamRemoveUser")
    @ResponseWrapper(localName = "Team_RemoveUserResponse", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamRemoveUserResponse")
    public void teamRemoveUser(
        @WebParam(name = "Authentication", targetNamespace = "http://www.outsystems.com")
        WebServiceSimpleAuthentication authentication,
        @WebParam(name = "TeamName", targetNamespace = "http://www.outsystems.com")
        String teamName,
        @WebParam(name = "Username", targetNamespace = "http://www.outsystems.com")
        String username,
        @WebParam(name = "Success", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<Boolean> success,
        @WebParam(name = "Status", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<APIStatus> status);

    /**
     * Adds a user to a team with a specified role.
     * 
     * @param teamName
     * @param username
     * @param status
     * @param authentication
     * @param roleName
     * @param success
     */
    @WebMethod(operationName = "Team_AddUser", action = "http://LifeTimeServices/TeamManagementService/Team_AddUser")
    @RequestWrapper(localName = "Team_AddUser", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamAddUser")
    @ResponseWrapper(localName = "Team_AddUserResponse", targetNamespace = "http://www.outsystems.com", className = "lifetime.teams.TeamAddUserResponse")
    public void teamAddUser(
        @WebParam(name = "Authentication", targetNamespace = "http://www.outsystems.com")
        WebServiceSimpleAuthentication authentication,
        @WebParam(name = "TeamName", targetNamespace = "http://www.outsystems.com")
        String teamName,
        @WebParam(name = "Username", targetNamespace = "http://www.outsystems.com")
        String username,
        @WebParam(name = "RoleName", targetNamespace = "http://www.outsystems.com")
        String roleName,
        @WebParam(name = "Success", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<Boolean> success,
        @WebParam(name = "Status", targetNamespace = "http://www.outsystems.com", mode = WebParam.Mode.OUT)
        Holder<APIStatus> status);

}
